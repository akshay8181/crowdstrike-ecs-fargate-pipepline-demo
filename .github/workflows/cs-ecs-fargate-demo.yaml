name: CrowdStrike ECS Fargate Demo

on:
  push:
    branches: [ main ]
  ## manual trigger
  workflow_dispatch:

jobs:
  crowdstrike-ecs-fargate-demo:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com
      FALCON_IMAGE: falcon-sensor/falcon-container:latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: ECR Login
      uses: aws-actions/amazon-ecr-login@v2

    # Patch ECS Task Definition Format (sed used to prevent commiting AWS Account ID)
    - name: Patch ECS Task Defintion with CrowdStrike Falcon ECS Patching utility
      run: |
        sed -i 's/#AWSACCOUNTID#/${{ secrets.AWS_ACCOUNT_ID }}/g' taskdefinition.json
        docker run \
        --mount type=bind,source=$(pwd)/taskdefinition.json,target=/root/taskdefinition.json \
        --rm $ECR_REGISTRY/$FALCON_IMAGE \
        -cid ${{ secrets.FALCON_CID }} \
        -image $ECR_REGISTRY/$FALCON_IMAGE \
        -pulltoken $(echo "{\"auths\":{\"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com\":{\"auth\":\"$(echo AWS:$(aws ecr get-login-password)|base64 -w 0)\"}}}" | base64 -w 0) \
        -ecs-spec-file /root/taskdefinition.json > taskdefinitionwithfalcon.json
        cat taskdefinitionwithfalcon.json
    
    - name: Upload CrowdStrike Falcon Patched ECS Task Definition to ECS
      run: |
        aws ecs register-task-definition --cli-input-json file://taskdefinitionwithfalcon.json 1>/dev/null    
    
    # Patch CloudFormation Format Sample using Parameters for Image URI (Requires Falcon Container 6.53+)
    - name: Patch CloudFormation with CrowdStrike Falcon ECS Patching utility
      run: |
        docker run \
        --mount type=bind,source=$(pwd)/cloudformation.yaml,target=/root/cloudformation.yaml \
        --rm $ECR_REGISTRY/$FALCON_IMAGE \
        -cid ${{ secrets.FALCON_CID }} \
        -image $ECR_REGISTRY/$FALCON_IMAGE \
        -pulltoken $(echo "{\"auths\":{\"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com\":{\"auth\":\"$(echo AWS:$(aws ecr get-login-password)|base64 -w 0)\"}}}" | base64 -w 0) \
        -cloudformationParams "ParameterKey=AppImagePath,ParameterValue=${ECR_REGISTRY}/${ECR_REPO}:latest" \
        -ecs-spec-file /root/cloudformation.yaml > cloudformationwithfalcon.yaml
        cat cloudformationwithfalcon.yaml
        
    - name: Create CloudFormation Change Set
      run: |
        aws cloudformation create-change-set \
        --stack-name crowdstrike-ecs-fargate-demo \
        --change-set-type CREATE \
        --change-set-name "crowdstrike-ecs-fargate-demo-commit-${{ env.GITHUB_SHA }}" \
        --template-body file://cloudformationwithfalcon.yaml \
        --parameters "ParameterKey=AppImagePath,ParameterValue=${ECR_REGISTRY}/${ECR_REPO}:latest" \
        --capabilities CAPABILITY_IAM
